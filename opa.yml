apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: postgres
  template:
    metadata:
      labels:
        component: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: Postgres
            - name: POSTGRES_DB
              value: loizenaidb
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  type: ClusterIP
  selector:
    component: postgres
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  selector:
    matchLabels:
      component: backend
  template:
    metadata:
      labels:
        component: backend
    spec:
      containers:
        - name: backend
          image: naveen5035/backend:v9
          ports:
            - containerPort: 8080
          env:
            - name: USERNAME
              value: postgres
            - name: HOST
              value: postgres-service
            - name: DATABASE
              value: loizenaidb
            - name: PASSWORD
              value: Postgres
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: ClusterIP
  selector:
    component: backend
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      initContainers:
        - name: proxy-init
          image: "openpolicyagent/proxy_init:v5"
          args: ["-p", "8000", "-o", "8001", "-u", "1111"]
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
            runAsNonRoot: false
            runAsUser: 0
      containers:
        - name: frontend
          image: naveen5035/frontend:v9
          stdin: true
          ports:
            - containerPort: 3000
          env:
            - name: BACKEND_URL
              value: http://backend-service:8080
        - name: envoy
          image: "envoyproxy/envoy:v1.21.2"
          volumeMounts:
          - readOnly: true
            mountPath: /config
            name: envoy-config-vol
          - readOnly: false
            mountPath: /run/opa/sockets
            name: opa-socket
          args:
          - "envoy"
          - "--config-path"
          - "/config/envoy.yaml"
          env:
          - name: ENVOY_UID
            value: "1111"
        - name: opa
          image: "openpolicyagent/opa:0.42.2-envoy-rootless"
          securityContext:
            runAsUser: 1111
          volumeMounts:
          - readOnly: true
            mountPath: /config
            name: opa-config-vol
          - readOnly: false
            mountPath: /run/opa/sockets
            name: opa-socket
          args:
          - "run"
          - "--server"
          - "--addr=http://127.0.0.1:8181"
          - "--config-file=/config/conf.yaml"
          - "--authorization=basic"
      env:
      volumes:
      - name: opa-config-vol
        configMap:
          name: opa-envoy-config
      - name: envoy-config-vol
        configMap:
          name: envoy-config
      - name: opa-socket
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  labels:
    app: frontend
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: frontend
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000
          - path: /customer
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 80